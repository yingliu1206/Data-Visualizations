{\rtf1\ansi\ansicpg936\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 library(tm)\
library(data.table)\
library(shiny)\
\
ui = shinyUI(pageWithSidebar(\
  headerPanel('2016 US Presidential Debates Analyser'),\
  sidebarPanel(\
    h3("Select a word to find out which candidate said it more, and to find associated words."),\
    p("Candidates put forward a number of isses they hope to represent, for example women's rights and job creation.\
      You can use this app to search some words related to these issues, to see which candidate said them more often.\
      Also, you can explore the context in which candidates used these words, but seeing a list of associated words as well."),\
    h4("Type the word you're interested in below: "),\
    textInput("word", label="", value = ""),\
    actionButton("update", "Find word!")\
    ),\
  mainPanel(\
    h2("Results appear here: "),\
    p(textOutput('printText')), \
    h2("Associated words appear here: "),\
    h3(textOutput('trumpGraphText')), \
    plotOutput('trumpGraph'), \
    h3(textOutput('clintonGraphText')), \
    plotOutput('clintonGraph')\
    #   tableOutput('table1')\
  )\
  \
  #fluidRow(column(3, verbatimTextOutput("value")))\
  \
  ))\
\
#read in data from .csv file (downloaded from kaggle.com)\
usPresDebate <- read.csv("/Users/LiuYing/Desktop/GU/2021-summer/assignment/assignment6/debate.csv")\
#subset to exclude moderators, and focus only the candidates\
candidatesOnly <- subset(usPresDebate, usPresDebate$Speaker=="Trump" | usPresDebate$Speaker=="Clinton")\
\
#make sure variables are in correct format\
candidatesOnly$Speaker <- factor(candidatesOnly$Speaker)\
candidatesOnly$Text <- iconv(candidatesOnly$Text,"WINDOWS-1252","UTF-8")\
\
#create seperate dataframes for each candidate (just neater)\
trumpOnly <- candidatesOnly[candidatesOnly$Speaker=="Trump",]\
clintonOnly <- candidatesOnly[candidatesOnly$Speaker=="Clinton",]\
\
server <- shinyServer(function(input, output)\{\
  \
  observeEvent(input$update, \{\
    \
    output$printText <- reactive(\{\
      #get input word from user and count number of times each candidate says it\
      folksC <- length(grep(tolower(input$word), tolower(clintonOnly$Text)))\
      folksT <- length(grep(tolower(input$word), tolower(trumpOnly$Text)))\
      \
      #use that to assign correct name to who said it more/ less\
      whoMore <- ifelse(folksC < folksT, "Trump", "Clinton")\
      moretimes <- ifelse(folksC < folksT, folksT, folksC)\
      whoLess <- ifelse(folksC > folksT, "Trump", "Clinton")\
      lesstimes <- ifelse(folksC > folksT, folksT, folksC)\
      #paste together correct output text\
      textDiff <- paste0("The word or phrase you enfered was ", \
                         tolower(input$word), \
                         ". This was used most frequently by ",  \
                         whoMore,\
                         ", who mentioned it ",\
                         moretimes, " times",\
                         ". (", \
                         whoLess, " mentioned this word only ", \
                         lesstimes, " times).")\
      #also create text to output in case there is no difference between them \
      textSame <- paste0("The word or phrase you enfered was ", \
                         tolower(input$word), ". ",\
                         "Both candidates mentioned this word ", \
                         moretimes, " times.")\
      \
      #assign final output text               \
      printText <- ifelse(folksT==folksC, textSame, textDiff)\
      printText\
      \
    \})\
    output$trumpGraphText <- reactive(\{\
      paste0("Trump uses the following words associated with ", tolower(input$word), ": ")\
    \})\
    \
    output$clintonGraphText <- reactive(\{\
      paste0("Clinton uses the following words associated with ", tolower(input$word), ": ")\
    \})\
    \
    #create corpus for each candidate to see associated words. \
    clintonCorpus <- Corpus(VectorSource(clintonOnly$Text))\
    tdmClinton <- TermDocumentMatrix(clintonCorpus,\
                                     control = list(removePunctuation = TRUE,\
                                                    stopwords = TRUE))\
    \
    \
    trumpCorpus <- Corpus(VectorSource(trumpOnly$Text))\
    tdmTrump <- TermDocumentMatrix(trumpCorpus,\
                                   control = list(removePunctuation = TRUE,\
                                                  stopwords = TRUE))\
    \
    clintonAssoc <- findAssocs(tdmClinton, tolower(input$word), 0.6)\
    clintonAssoc <- as.data.frame(clintonAssoc)\
    clintonAssoc <- setDT(clintonAssoc, keep.rownames = TRUE)[]\
    names(clintonAssoc)[2] <- "corr"\
    \
    trumpAssoc <- findAssocs(tdmTrump, tolower(input$word), 0.6)\
    trumpAssoc <- as.data.frame(trumpAssoc)\
    trumpAssoc <- setDT(trumpAssoc, keep.rownames = TRUE)[]\
    names(trumpAssoc)[2] <- "corr"\
    \
    output$clintonGraph <- renderPlot(\{\
      \
      #graph of associated words for Clinton\
      ggplot(clintonAssoc, aes(x=reorder(rn, corr), y=corr)) + \
        geom_bar(stat = "identity") + \
        theme_bw() + \
        theme(text=element_text(size=18))  +\
        coord_flip() +\
        labs(y="Correlation of each term \\n(only 0.6 and over are shown)", x="Associated word")\
      \
    \})\
    \
    output$trumpGraph <- renderPlot(\{\
      \
      #graph of associated words for Clinton\
      ggplot(trumpAssoc, aes(x=reorder(rn, corr), y=corr)) + \
        geom_bar(stat = "identity") + \
        theme_bw() + \
        theme(text=element_text(size=18))  +\
        coord_flip() +\
        labs(y="Correlation of each term \\n(only 0.6 and over are shown)", x="Associated word")\
      \
    \})\
    \
  \})  \
  \
\})\
\
shinyApp(ui = ui, server = server)}